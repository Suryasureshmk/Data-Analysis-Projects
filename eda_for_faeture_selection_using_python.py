# -*- coding: utf-8 -*-
"""EDA FOR FAETURE SELECTION USING PYTHON

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-x8D2kDRW7piIBBgt5IZIiJXDiRoekQ4

**EDA FOR FEATURE SELECTTION USING PYTHON**
"""

#importing necessary python libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

data=pd.read_csv('/content/dynamic_pricing (4).csv')
data

data.head()

data.tail()

data.shape

data.describe()

data.columns

#cleaning the data
data.isnull().sum()

data.dropna()

data.dtypes

#univariate analysis
sns.set_style("whitegrid")

numerical_cols=['Number_of_Riders','Number_of_Drivers','Number_of_Past_Rides','Average_Ratings','Expected_Ride_Duration','Historical_Cost_of_Ride']
categorical_cols=['Location_Category','Customer_Loyalty_Status','Time_of_Booking','Vehicle_Type']

#plotting distributions for numerical features
fig, axes = plt.subplots(nrows=3,ncols=2,figsize=(14,12))
fig.subplots_adjust(hspace=0.4,wspace=0.4)
for i , col in enumerate(numerical_cols):
  sns.histplot(data[col], kde=True, ax=axes[i//2,i%2])
  axes[i//2,i%2].set_title(f'Distribution of {col}', fontsize=10)
  axes[i//2,i%2].set_xlabel('')
  axes[i//2,i%2].set_ylabel('')

#plotting distribution for categorical features
fig, axes = plt.subplots(nrows=2,ncols=2,figsize=(14, 12))
fig.subplots_adjust(hspace=0.4,wspace=0.4)
for i, col in enumerate(categorical_cols):
  sns.countplot(data=data, x=col, ax=axes[i//2,i%2])
  axes[i//2,i%2].set_title(f'Distribution of {col}',fontsize=10)
  axes[i//2,i%2].set_xlabel('')
  axes[i//2,i%2].set_ylabel('')
  axes[i//2,i%2].tick_params(axis='x')
plt.tight_layout()

#bivariate analysis : numerical features vs Historical_Cost_of_Ride
num_plots=len(numerical_cols[:-1])
num_plots

n_cols=2

n_rows=(num_plots+1)//n_cols
n_rows

fig,axes=plt.subplots(nrows=n_rows,ncols=n_cols,figsize=(14,n_rows*4))
fig.subplots_adjust(hspace=0.4,wspace=0.4)
axes=axes.flatten()
#plotting each numerical column against the historical cost.
for i , col in enumerate(numerical_cols[:-1]):
  sns.scatterplot(data=data,x=col,y='Historical_Cost_of_Ride',ax=axes[i])
  axes[i].set_title(f'{col} vs Historical_Cost_of_Ride',fontsize=10)
  axes[i].set_xlabel(col)
  axes[i].set_ylabel('Historical_Cost_of_Ride')
for j in range(i+1,n_rows * n_cols):
  fig.delaxes(axes[j])
plt.tight_layout()
plt.show()

#bivariate analysis : categorical features vs Historical_Cost_of_Ride

fig,axes= plt.subplots(nrows=2,ncols=2,figsize=(14,12))
fig.subplots_adjust(hspace=0.4,wspace=0.4)

for i,col in enumerate(categorical_cols):
  sns.boxplot(data=data,x=col,y='Historical_Cost_of_Ride',ax=axes[i//2,i%2])
  axes[i//2,i%2].set_title(f'{col} vs Historical_Cost_of_Ride',fontsize=10)
  axes[i//2,i%2].set_xlabel('')
  axes[i//2,i%2].set_ylabel(' Historical_Cost_of_Ride')
  axes[i//2,i%2].tick_params(axis='x')
plt.tight_layout()